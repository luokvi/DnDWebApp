{"version":3,"sources":["services/users.js","services/creations.js","services/login.js","components/loginForm.js","components/formComponents.js","components/signupForm.js","components/friendRequest.js","components/myProfilePage.js","components/partyForm.js","components/userPage.js","components/users.js","components/characterPage.js","components/itemCreationForm.js","components/characterForm.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","getAll","a","axios","get","res","data","getUser","userId","token","url","axiosConfig","headers","getOtherUser","sendFriendRequest","body","post","acceptFriendRequest","senderId","requestId","createUser","newUser","createCharacter","updateCharacter","characterId","patch","getCharacter","id","createItem","getEquipment","getSpells","getWeapons","getParty","createParty","addUserToParty","partyId","friendId","party","updated","characters","map","c","users","u","updateParty","loginUser","username","password","user","LoginForm","setFunction","loggedInAs","useState","setUsername","setPassword","notifText","setNotif","navigate","useNavigate","useEffect","checkStorage","storedUser","JSON","parse","localStorage","getItem","storedToken","userService","response","handleLogin","event","preventDefault","loginService","userid","setItem","stringify","to","onClick","clear","onSubmit","type","value","name","required","onChange","target","CheckboxField","title","label","checked","htmlFor","AddItemToList","listHeader","listValue","listSetFunction","nameValue","nameSet","descriptionValue","descriptionSet","newItem","description","AddToSimpleList","item","DropDownList","field","optionsList","oneValue","selected","setSelected","optionValue","string","split","selectedId","selectedName","NewFormField","args","min","max","CreateUserForm","repeatPwd","setRepeatPws","notif","handleSubmit","length","savedUser","FriendRequest","r","accept","sender","Character","className","level","class","race","Party","p","Parties","parties","Friend","f","ProfilePage","dateCreated","dateTime","friends","friend","friendRequests","request","chara","creations","AddFriendToPartyForm","filter","includes","createService","defaultValue","PartyCreationForm","useParams","isNewParty","setIsNewParty","setName","setCharacters","setUsers","gotCharas","setCharas","gotUsers","setGotUsers","getCharas","getUsers","gotParty","newParty","UserPage","gotUser","setUser","isFriend","setIsFriend","hasFriendRequest","setRequest","hasSentFriendRequest","setSentRequest","commonFriends","setCommonFriends","forEach","sentFriendRequests","receiver","common","newRequest","receiverId","AllUsers","allUsers","setAllUsers","CharacterPage","setChara","creationsService","creator","background","personalityTraits","alignment","experiencePoints","currentHealth","maxHealth","hitDice","armorClass","initiative","speed","strength","dexterity","constitution","intelligence","wisdom","charisma","passiveWisdom","proficiencyBonus","proficientSkills","skill","otherProficiencies","prof","languages","lan","coins","copper","silver","electrum","gold","platinum","equipment","e","weapons","w","atkBonus","damage","spells","s","spellCastingAbility","features","notes","n","EquipmentCreationForm","equipList","setEquipList","equipNameValue","equipNameSet","equipDescriptionValue","equipDescriptionSet","setCreations","createEquip","newEquip","created","SpellCreationForm","spellsList","setSpellsList","spellNameValue","spellNameSet","spellDescriptionValue","spellDescriptionSet","spellLevel","levelSet","castingTime","castingTimeSet","spellRangeValue","spellRangeSet","verbal","verbalSet","somatic","somaticSet","material","materialSet","components","minutesValue","minutesSet","isConcentrationValue","concentrationSet","createSpell","push","newSpell","WeaponCreationForm","weaponsList","setWeaponsList","weaponNameValue","weaponNameSet","weaponDescriptionValue","weaponDescriptionSet","atkValue","atkSet","damageValue","damageSet","weaponRangeValue","weaponRangeSet","createWeapon","newWeapon","CharacterForm","handleSubmitToBackend","userCreations","isNewCharacter","setIsNew","setRace","charClass","setClass","setLevel","exp","setExp","setBackground","personality","setPersonality","setAlignment","health","setHealth","setHitDice","setArmorClass","setInitiative","setSpeed","setStrength","dex","setDex","setConstitution","int","setInt","wis","setWis","cha","setCha","pWis","setPWis","bonus","setBonus","acrobatics","setAcrobatics","animalHandling","setAnimalHandling","arcana","setArcana","athletics","setAthletics","deception","setDeception","history","setHistory","insight","setInsight","intimidation","setIntimidation","investigation","setInvestigation","medicine","setMedicine","nature","setNature","perception","setPerception","performance","setPerformance","persuasion","setPersuasion","religion","setReligion","sleightOfHand","setSleightOfHand","stealth","setStealth","survival","setSurvival","setLan","setOtherProficiencies","setFeatures","setWeapons","spellCasting","setSpellCasting","setSpells","equip","setEquip","storage","setStorage","setCopper","setSilver","setGold","setPlatinum","setElectrum","setNotes","gotEquipment","setGotEquipment","gotSpells","setGotSpells","gotWeapons","setGotWeapons","getItems","allEquipment","concat","allSpells","allWeapons","listOfProficiencies","newCharacter","App","setToken","loginFunc","profile","path","element","isNew","CreationsService","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.721f978c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/users';\r\n\r\n// Get all users.\r\nconst getAll = async () => {\r\n    const res = await axios.get(baseUrl)\r\n\r\n    return res.data\r\n};\r\n\r\n// Get specific user by id.\r\nconst getUser = async (userId, token) => {\r\n    const url = baseUrl + \"/\" + userId\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.get(url, axiosConfig)\r\n\r\n    return res.data\r\n}\r\n\r\nconst getOtherUser = async (userId) => {\r\n    const url = baseUrl + \"/other/\" + userId\r\n    const res = await axios.get(url)\r\n\r\n    return res.data\r\n}\r\n\r\nconst sendFriendRequest = async (body, token) => {\r\n    const url = baseUrl + \"/friendRequest\"\r\n\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.post(url, body, axiosConfig)\r\n    return res.data\r\n}\r\n\r\n// Accept a friend request.\r\nconst acceptFriendRequest = async (userId, senderId, requestId, token) => {\r\n    const url = baseUrl + \"/friend\"\r\n    const body = {\r\n        \"senderId\": userId,\r\n        \"receiverId\": senderId,\r\n        \"friendRequest\": requestId\r\n    }\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.post(url, body, axiosConfig)\r\n    return res.data\r\n}\r\n\r\n// Create new user.\r\nconst createUser = async (newUser) => {\r\n    const res = await axios.post(baseUrl, newUser)\r\n\r\n    return res.data\r\n}\r\n\r\nexport default { getAll, getUser, sendFriendRequest, acceptFriendRequest, getOtherUser, createUser }","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/'\r\n\r\nconst createCharacter = async (body, token) => {\r\n    const url = baseUrl + \"character\"\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.post(url, body, axiosConfig)\r\n    return res.data\r\n}\r\n\r\nconst updateCharacter = async (body, token) => {\r\n    const characterId = body.characterId\r\n    const url = baseUrl + \"character/\" + characterId\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.patch(url, body, axiosConfig)\r\n    return res.data\r\n}\r\n\r\nconst getCharacter = async (id, token) => {\r\n    const url = baseUrl + \"character/\" + id\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.get(url, axiosConfig)\r\n    \r\n    return res.data\r\n}\r\n\r\nconst createItem = async (body, token) => {\r\n    const url = baseUrl + \"items\"\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.post(url, body, axiosConfig)\r\n\r\n    return res.data\r\n}\r\n\r\nconst getEquipment = async () => {\r\n    const url = baseUrl + \"items/equipment\"\r\n\r\n    const res = await axios.get(url)\r\n\r\n    return res.data\r\n}\r\n\r\nconst getSpells = async () => {\r\n    const url = baseUrl + \"items/spells\"\r\n\r\n    const res = await axios.get(url)\r\n\r\n    return res.data\r\n}\r\n\r\nconst getWeapons = async () => {\r\n    const url = baseUrl + \"items/weapons\"\r\n\r\n    const res = await axios.get(url)\r\n\r\n    return res.data\r\n}\r\n\r\nconst getParty = async (id) => {\r\n    const url = baseUrl + 'character/party/' + id\r\n\r\n    const res = await axios.get(url)\r\n\r\n    return res.data\r\n}\r\n\r\nconst createParty = async (body, token) => {\r\n    const url = baseUrl + \"character/party\"\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.post(url, body, axiosConfig)\r\n    return res.data\r\n}\r\n\r\nconst addUserToParty = async (partyId, friendId, token, userId) => {\r\n    const party = await getParty(partyId)\r\n\r\n    const updated = {\r\n        ...party,\r\n        characters: [...(party.characters.map(c => c.id))],\r\n        users: [...(party.users.map(u => u.id)), friendId],\r\n        userId: userId\r\n    }\r\n\r\n    const url = baseUrl + \"character/party/\" + partyId\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.patch(url, updated, axiosConfig)\r\n    return res.data\r\n\r\n}\r\n\r\nconst updateParty = async (body, token) => {\r\n    const url = baseUrl + \"character/party/\" + body.id\r\n    const axiosConfig = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    }\r\n\r\n    const res = await axios.patch(url, body, axiosConfig)\r\n    return res.data\r\n}\r\n\r\nexport default { createCharacter, createItem, getEquipment, getSpells, getWeapons,\r\n    getCharacter, updateCharacter, getParty, createParty, addUserToParty, updateParty }","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst loginUser = async (username, password) => {\r\n    const user = {\r\n        username: username,\r\n        password: password\r\n    }\r\n    const res = await axios.post(baseUrl, user)\r\n\r\n    return res.data\r\n};\r\n\r\nexport default { loginUser }","import React, { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport loginService from '../services/login'\r\nimport userService from '../services/users'\r\n\r\nconst LoginForm = ({ setFunction, user, loggedInAs }) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const [notifText, setNotif] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n    \r\n    // Check localStorage for user.\r\n    useEffect(() => {\r\n        checkStorage()\r\n      }, [])\r\n\r\n    const checkStorage = async () => {\r\n        if ( user === ''){\r\n            const storedUser = JSON.parse(localStorage.getItem('user'))\r\n            const storedToken = localStorage.getItem('token')\r\n\r\n            if (storedUser !== null){\r\n                // See if token still valid.\r\n                const response = await userService.getUser(storedUser.id, storedToken)\r\n                try{\r\n                    const id = response.id\r\n                    setFunction(id, storedToken)\r\n                } catch {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        \r\n        try {\r\n            // Login\r\n            const response = await loginService.loginUser(username, password)\r\n            // Get user\r\n            const user = await userService.getUser(response.userid, response.token)\r\n            \r\n            // Set user and token to LocalStorage\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            localStorage.setItem('token', response.token)\r\n\r\n            setFunction(response.userid, response.token)\r\n\r\n            setPassword('')\r\n            setNotif('')\r\n\r\n            // Move to myProfile page\r\n            navigate('/myProfile')\r\n\r\n        } catch { \r\n            // if couldn't find user\r\n            setNotif('Incorrect username or password')\r\n            setPassword('')\r\n        }\r\n    }\r\n\r\n    const handleLogout = (event) => {\r\n        event.preventDefault()\r\n\r\n        setFunction('', '')\r\n        setUsername('')\r\n\r\n        // Clear localStorage.\r\n        localStorage.clear()\r\n    }\r\n\r\n    if ( !user ){\r\n        return(\r\n            <div>\r\n                <h3>Sign in</h3>\r\n                <form onSubmit={handleLogin}>\r\n                    <p>{notifText}</p>\r\n                    <div>username\r\n                        <input id=\"username\" type=\"text\" value={username} name=\"Username\" required onChange={({ target }) => setUsername(target.value)}/>\r\n                    </div>\r\n                    <div>password\r\n                        <input id=\"password\" type=\"password\" value={password} name=\"Password\" required onChange={({ target }) => setPassword(target.value)}/>\r\n                    </div>\r\n                    <button id=\"login-button\" type=\"submit\">login</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p>Logged in as\r\n                <Link to={\"/myProfile\"}>\r\n                     {loggedInAs}\r\n                </Link>\r\n            </p>\r\n            <button id=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default LoginForm","import React, { useState } from \"react\"\r\n\r\nexport const CheckboxField = ({ title, label, value, setFunction }) => {\r\n    // If value already set to true, show checked checkbox.\r\n    if (value !== \"0\"){\r\n        return(\r\n            <div>\r\n            <input type=\"checkbox\" id={title} name={title}\r\n            value={title} onChange={({target}) => setFunction(\"0\")} checked/>\r\n            <label htmlFor={title}>{label}</label>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    // Else show unchecked checkbox.\r\n    return(\r\n        <div>\r\n            <input type=\"checkbox\" id={title} name={title}\r\n            value={title} onChange={({ target }) => setFunction(target.value)} />\r\n            <label htmlFor={title}>{label}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AddItemToList = ({ listHeader, listValue, listSetFunction }) => {\r\n    const [nameValue, nameSet] = useState(\"\")\r\n    const [descriptionValue, descriptionSet] = useState(\"\")\r\n\r\n    const addNew = (event) => {\r\n        event.preventDefault()\r\n        if (nameValue === \"\"){\r\n            return\r\n        }\r\n        const newItem = {\r\n            'name': nameValue,\r\n            'description': descriptionValue\r\n        }\r\n        listSetFunction([...listValue, newItem])\r\n\r\n        nameSet(\"\")\r\n        descriptionSet(\"\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p><b>{listHeader}</b></p>\r\n                <NewFormField label=\"Name\" type=\"text\" value={nameValue} setFunction={nameSet} />\r\n                <NewFormField label=\"Description\" type=\"text\" value={descriptionValue} setFunction={descriptionSet}/>\r\n                <button onClick={addNew}>Add</button>\r\n\r\n            <p><b>Added:</b></p>\r\n            {listValue.map(value =>\r\n                <div key={value.name}>\r\n                    <p><b>Name:</b> {value.name} </p>\r\n                    <p><b>Description:</b> {value.description}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AddToSimpleList = ({ listHeader, label, listValue, listSetFunction }) => {\r\n    const [item, setItem] = useState(\"\")\r\n\r\n    const addNew = (event) => {\r\n        event.preventDefault()\r\n        if(item === \"\"){\r\n            return\r\n        }\r\n\r\n        listSetFunction([...listValue, item])\r\n\r\n        setItem(\"\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p><b>{listHeader}</b></p>\r\n            <NewFormField label={label} type=\"Text\" value={item} setFunction={setItem} />\r\n            <button onClick={addNew}>Add</button>\r\n\r\n            <p><b>Added:</b></p>\r\n            {listValue.map(value =>\r\n                <p key={value}>{value}</p>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const DropDownList = ({ field, optionsList, listValue, listSetFunction, oneValue=false }) => {\r\n    const [selected, setSelected] = useState(\"\")\r\n\r\n    const add = (event) => {\r\n        event.preventDefault()\r\n        if (selected === \"\"){\r\n            return\r\n        }\r\n\r\n        const string = selected.split(\",\")\r\n        const selectedId = string[0]\r\n        const selectedName = string[1]\r\n        listSetFunction([...listValue, {id: selectedId, name: selectedName}])\r\n\r\n        setSelected(\"\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h5>{field}</h5>\r\n            <select name={field} id={field} onChange={({ target }) => setSelected(target.value)}>\r\n                {optionsList.map(optionValue =>\r\n                    oneValue ? <option key={optionValue.id} value={[optionValue.id, optionValue.name]}>{optionValue.name}</option>\r\n                    : <option key={optionValue.id} value={[optionValue.id, optionValue.name]}>{optionValue.name}: {optionValue.description}</option>\r\n                )}\r\n                <option>empty</option>\r\n            </select>\r\n            <button onClick={add}>Add</button>\r\n\r\n            <p><b>Added:</b></p>\r\n            {listValue.map(item =>\r\n                <p key={item.id}>{item.name}</p>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const NewFormField = ({ label, type, value, setFunction, ...args }) => {\r\n    return(\r\n        <div>\r\n            <label>{label}: </label>\r\n            <input type={type} value={value} name={label} onChange={({ target }) => setFunction(target.value)}\r\n            min={args.min} max={args.max}/>\r\n        </div>\r\n    )\r\n}","import React, { useState } from \"react\"\r\n\r\nimport userService from '../services/users'\r\nimport { NewFormField } from \"./formComponents\"\r\n\r\nconst CreateUserForm = ({ }) => {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [repeatPwd, setRepeatPws] = useState(\"\")\r\n    const [notif, setNotif] = useState(\"\")\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (username === \"\" || password === \"\" || repeatPwd === \"\"){\r\n            setNotif(\"Username and password required.\")\r\n            return\r\n        }\r\n        // Check that username is atleast 5 chatacters long.\r\n        if ( username.length < 5){\r\n            setNotif(\"Username should be atleast 5 characters long.\")\r\n            return\r\n        }\r\n        // Check that password is atleast 8 characters long.\r\n        if (password.length < 8){\r\n            setNotif(\"Password should be atleast 8 characters long.\")\r\n            setPassword(\"\")\r\n            setRepeatPws(\"\")\r\n            return\r\n        }\r\n        // Check that passwords match.\r\n        if (password !== repeatPwd){\r\n            setPassword(\"\")\r\n            setRepeatPws(\"\")\r\n            setNotif(\"Passwords should match.\")\r\n            return\r\n        }\r\n        setNotif(\"\")\r\n\r\n        const newUser = {\r\n            username: username,\r\n            password: password\r\n        }\r\n\r\n        const savedUser = await userService.createUser(newUser)\r\n\r\n        setNotif(\"Created new user \" + savedUser.username)\r\n\r\n        setUsername(\"\")\r\n        setPassword(\"\")\r\n        setRepeatPws(\"\")\r\n    }\r\n    return(\r\n        <div>\r\n            <h3>Sign up</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <NewFormField label=\"Username\" value={username} setFunction={setUsername} required />\r\n                <NewFormField label=\"Password\" type=\"password\" value={password} setFunction={setPassword} required />\r\n                <NewFormField label=\"Repeat password\" type=\"password\" value={repeatPwd} setFunction={setRepeatPws} required />\r\n                <p>{notif}</p>\r\n\r\n                <button type=\"submit\">sign up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUserForm","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport userService from '../services/users'\r\n\r\nconst FriendRequest = ({ user, r, setNotif, token }) => {\r\n    \r\n    const accept = async () => {\r\n        try{\r\n            const response = await userService.acceptFriendRequest(\r\n                user.id,\r\n                r.sender.id,\r\n                r.id,\r\n                token\r\n            )\r\n            \r\n            setNotif(\r\n                \"Added friend \" + \r\n                r.sender.username\r\n                )\r\n        }catch{\r\n            setNotif(\r\n                \"Error occured when accepting friend request from \" + \r\n                r.sender.username\r\n                )\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <li>\r\n            <p>\r\n                From: <Link to={\"/user/\" + r.sender.id}>\r\n                        {r.sender.username}\r\n                    </Link>\r\n                <button onClick={accept}>Accept</button>\r\n            </p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default FriendRequest","import React, { useState } from \"react\"\r\nimport { Link, Outlet } from 'react-router-dom'\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport FriendRequest from './friendRequest'\r\n\r\nconst Character = ({ c }) => {\r\n    const navigate = useNavigate()\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n\r\n        navigate(\"/character/\" + c.id)\r\n    }\r\n    return(\r\n        <div className=\"card\">\r\n            <h5><Link to={\"/character/view/\" + c.id}>\r\n                {c.name}</Link>\r\n            </h5>\r\n            <p>level {c.level} {c.class}</p>\r\n            <p>{c.race}</p>\r\n            <button onClick={handleClick}>Edit</button>\r\n        </div>\r\n    )\r\n}\r\nconst Party = ({ p }) => {\r\n    const navigate = useNavigate()\r\n    \r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n\r\n        navigate(\"/party/\" + p.id)\r\n    }\r\n    return(\r\n        <div className=\"card\">\r\n            <h5>{p.name}</h5>\r\n            {p.characters.map(c =>\r\n                <p key={c.id}>\r\n                    {c.name}: level {c.level} {c.class}\r\n                </p>\r\n            )}\r\n            <button onClick={handleClick}>Edit</button>\r\n        </div>\r\n    )\r\n}\r\nconst Parties = ({ parties }) => {\r\n    if (parties.length === 0){\r\n        return(\r\n            null\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"cardContainer\">\r\n                {parties.map(p =>\r\n                    <Party p={p} key={p.id}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Friend = ({ f }) => {\r\n    return(\r\n        <li key={f.id}>\r\n            <Link to={\"/user/\" + f.id} >\r\n                {f.username}\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst ProfilePage = ({ user, token }) => {\r\n    const [notifText, setNotif] = useState('')\r\n\r\n    if (user === ''){\r\n        return(\r\n            <div>loading...</div>\r\n        )\r\n    }\r\n\r\n    // Get just the day of when user was created.\r\n    const dateParts = user.dateCreated.split(\"T\")\r\n    const dateCreated = dateParts[0]\r\n\r\n    return(\r\n        <div id={user.username}>\r\n            <h2>{user.username}</h2>\r\n            <p className=\"lighterText\">User since <time dateTime={dateCreated}>{dateCreated}</time></p>\r\n\r\n            <h3>Friends:</h3>\r\n            <ul>\r\n            {user.friends.map(friend =>\r\n                <Friend f={friend} key={friend.id}/>\r\n                )}\r\n            </ul>\r\n\r\n            <h3>Friend requests:</h3>\r\n            <p>{notifText}</p>\r\n            <ul>\r\n            {user.friendRequests.map(request =>\r\n                <FriendRequest r={request} user={user} setNotif={setNotif} token={token} key={request.id}/>\r\n                )}\r\n            </ul>\r\n\r\n            <Link to={'/user/all'}>Look for users</Link>\r\n\r\n            <h3>Characters:</h3>\r\n            < Link to={\"/character/new\"}>\r\n                Create a new character\r\n            </Link>\r\n\r\n            <div className=\"cardContainer\">\r\n                {user.characters.map(chara => \r\n                    <Character c={chara} key={chara.id}/>\r\n                    )}\r\n            </div>\r\n\r\n            <h3>Parties:</h3>\r\n            <Link to={\"/party/new\"}>Create a new Party</Link>\r\n            <Parties parties={user.creations.parties} />\r\n            \r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage","import React, { useEffect, useState } from \"react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\n\r\nimport createService from '../services/creations'\r\nimport { NewFormField, DropDownList } from \"./formComponents\"\r\n\r\nexport const AddFriendToPartyForm = ({ token, user, friendId }) => {\r\n    const [selected, setSelected] = useState(\"\")\r\n\r\n    let parties = user.creations.parties\r\n    parties = parties.filter(p => !p.users.includes(friendId))\r\n    if (parties.length === 0){\r\n        return(\r\n            <></>\r\n        )\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (selected === \"\"){\r\n            return\r\n        }\r\n\r\n        createService.addUserToParty(selected, friendId, token, user.id)\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} className=\"formHorPart\">\r\n            <select name=\"Party\" onChange={({ target }) => setSelected(target.value)} defaultValue={\"\"}>\r\n                {parties.map( p =>\r\n                    <option key={p.id} value={p.id} >\r\n                        {p.name}\r\n                    </option>\r\n                    )}\r\n                <option value=\"\">Select a Party</option>\r\n            </select>\r\n            <button type=\"submit\">Add to Party</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PartyCreationForm = ({ token, userId, user }) => {\r\n    const { partyId } = useParams()\r\n    const [isNewParty, setIsNewParty] = useState(true)\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [characters, setCharacters] = useState([])\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [gotCharas, setCharas] = useState([])\r\n    const [gotUsers, setGotUsers] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        getParty()\r\n        getCharas()\r\n        getUsers()\r\n    }, [])\r\n\r\n    const getParty = async () => {\r\n        if (partyId === 'new'){\r\n            return\r\n        }\r\n        const gotParty = await createService.getParty(partyId)\r\n\r\n        setName(gotParty.name)\r\n        setCharacters(gotParty.characters)\r\n        setUsers(gotParty.users)\r\n        setIsNewParty(false)\r\n    }\r\n\r\n    const getCharas = () => {\r\n        setCharas(user.characters)\r\n    }\r\n\r\n    const getUsers = () => {\r\n        let friends = user.friends\r\n\r\n        friends = friends.map(f => {\r\n            return(\r\n                {\r\n                    name: f.username,\r\n                    id: f.id\r\n                }\r\n            )\r\n        })\r\n\r\n        setGotUsers(friends)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const newParty = {\r\n            name: name,\r\n            characters: characters.map(c => c.id),\r\n            users: [...users.map(u => u.id), userId],\r\n            id: !isNewParty ? partyId : \"\",\r\n            userId: userId\r\n        }\r\n\r\n        if (isNewParty === true){\r\n            const created = await createService.createParty(newParty, token)\r\n        } else {\r\n            const created = await createService.updateParty(newParty, token)\r\n        }\r\n\r\n        navigate('/myProfile')\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>Create a Party</h3>\r\n\r\n            <form onSubmit={handleSubmit} className=\"formContainer\">\r\n                <div className=\"formHorPart\">\r\n                    <NewFormField label=\"Name\" type=\"text\" value={name} setFunction={setName} />\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <DropDownList field=\"Characters\" optionsList={gotCharas} listValue={characters} listSetFunction={setCharacters} oneValue={true} />\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <DropDownList field=\"Other users\" optionsList={gotUsers} listValue={users} listSetFunction={setUsers} oneValue={true} />\r\n                </div>\r\n                \r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PartyCreationForm","import React, { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport userService from '../services/users'\r\nimport { AddFriendToPartyForm } from \"./partyForm\"\r\n\r\nconst UserPage = ({ user, token }) => {\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const [gotUser, setUser] = useState(\"\")\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [hasFriendRequest, setRequest] = useState(false)\r\n    const [hasSentFriendRequest, setSentRequest] = useState(false)\r\n\r\n    const [commonFriends, setCommonFriends] = useState([])\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [])\r\n\r\n    const getUser = async () => {\r\n        // If trying to get self, navigate to myProfile.\r\n        if (id === user.id){\r\n            navigate(\"/myProfile\")\r\n            return\r\n        }\r\n\r\n        const u = await userService.getOtherUser(id)\r\n        setUser(u)\r\n\r\n        // Check if this user is a friend.\r\n        user.friends.forEach(f => {\r\n          if (f.id === id){\r\n              setIsFriend(true)\r\n          }  \r\n        })\r\n\r\n        // Check if friendrequest.\r\n        user.friendRequests.forEach(r => {\r\n            if (r.sender.id === id){\r\n                setRequest(true)\r\n            }\r\n        })\r\n\r\n        // Check if sent friendrequest.\r\n        user.sentFriendRequests.forEach(r => {\r\n            if (r.receiver.id === id){\r\n                setSentRequest(true)\r\n            }\r\n        })\r\n\r\n        let common = u.friends\r\n        common.forEach(f => {\r\n            if (!user.friends.includes(f)){\r\n                f = \"\"\r\n            }\r\n        })\r\n        setCommonFriends(common.filter(f => f !== \"\"))\r\n    }\r\n\r\n    const sendFriendRequest = async () =>{\r\n        const newRequest = {\r\n            senderId: user.id,\r\n            receiverId: id\r\n        }\r\n\r\n        const response = await userService.sendFriendRequest(newRequest, token)\r\n        setSentRequest(true)\r\n    }\r\n\r\n    // If no user yet, return loading page\r\n    if (gotUser === \"\"){\r\n        return(\r\n            <div>\r\n                <p>Loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>User {gotUser.username}</h2>\r\n            {isFriend ? <p>A friend!</p>\r\n                : hasFriendRequest ? <button>Accept friendRequest</button>\r\n                    : hasSentFriendRequest ? <p>Sent friendrequest</p>\r\n                        : <button onClick={sendFriendRequest}>Send friendrequest</button>\r\n            }\r\n\r\n            {isFriend ? <AddFriendToPartyForm token={token} user={user} friendId={id}/>\r\n                : <></>\r\n            }\r\n\r\n            <h3>Common friends</h3>\r\n            {commonFriends.map(f =>\r\n                <p key={f.id}>{f.username}</p>\r\n            )}\r\n\r\n            <h3>Characters</h3>\r\n            {gotUser.characters.map(c => \r\n                <p key={c.id}>\r\n                    <b>{c.name}</b>, a {c.race}, level {c.level} {c.class}\r\n                </p>\r\n                )}\r\n\r\n            <h3>Common parties</h3>\r\n            {gotUser.creations.parties.map(p =>\r\n                <p key={p.id}>{p.name}</p>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport userService from '../services/users'\r\n\r\nconst AllUsers = ({ }) => {\r\n    const [allUsers, setAllUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n    const getUsers = async () => {\r\n        const response = await userService.getAll()\r\n\r\n        // Edit the dateCreated field.\r\n        response.forEach(user => {\r\n            const rawDate = user.dateCreated\r\n            const dateParts = rawDate.split(\"T\")\r\n            const dateCreated = dateParts[0]\r\n            user.dateCreated = dateCreated\r\n        })\r\n\r\n        setAllUsers(response)\r\n    }\r\n\r\n    if (allUsers === []){\r\n        return(\r\n            <div>\r\n                <p>loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {allUsers.map(u => (\r\n                <p key={u.id}>\r\n                    <Link to={\"/user/\" + u.id}>\r\n                        {u.username}\r\n                    </Link>\r\n                    , user since {u.dateCreated}\r\n                </p>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllUsers","import React, { useState, useEffect } from \"react\"\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\"\r\n\r\nimport creationsService from '../services/creations'\r\n\r\nconst CharacterPage = ({ token }) => {\r\n    const { characterId } = useParams()\r\n    const [chara, setChara] = useState(\"\")\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        getCharacter()\r\n    },[])\r\n\r\n    const getCharacter = async () => {\r\n        const response = await creationsService.getCharacter(characterId, token)\r\n        setChara(response)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n\r\n        navigate('/character/' + characterId)\r\n    }\r\n\r\n    if (chara === \"\"){\r\n        return(\r\n            <div>\r\n                <p>loading...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"formHorPart\">\r\n                <h2>{chara.name}</h2>\r\n                    <p>\r\n                        Player: \r\n                        <Link to={'/user/' + chara.creator.id}>\r\n                            {chara.creator.username}\r\n                        </Link>\r\n                    </p>\r\n            </div>\r\n            <div className=\"formHorPart\">\r\n                <p>Class & level: {chara.class} {chara.level}</p>\r\n                <p>Background: {chara.background}</p>\r\n                <p>Race: {chara.race}</p>\r\n                <p>Personality traits: {chara.personalityTraits}</p>\r\n                <p>Alignment: {chara.alignment}</p>\r\n                <p>Experience points: {chara.experiencePoints}</p>\r\n            </div>\r\n                \r\n\r\n            <div className=\"formHorPart\">\r\n                <p>Health: {chara.currentHealth} / {chara.maxHealth}</p>\r\n                <p>Hit dice: {chara.hitDice}</p>\r\n                <p>Armor class: {chara.armorClass}</p>\r\n                <p>Intiative: {chara.initiative}</p>\r\n                <p>Speed: {chara.speed} feet</p>\r\n            </div>\r\n\r\n            <div className=\"formHorPart\">\r\n                <p>Strength: {chara.strength}</p>\r\n                <p>Dexterity: {chara.dexterity}</p>\r\n                <p>Constitution: {chara.constitution}</p>\r\n                <p>Intelligence: {chara.intelligence}</p>\r\n                <p>Wisdom: {chara.wisdom}</p>\r\n                <p>Charisma: {chara.charisma}</p>\r\n                <p>Passive wisdom: {chara.passiveWisdom}</p>\r\n            </div>\r\n\r\n            <div className=\"formVerPart\">\r\n                <p>Proficiency bonus: {chara.proficiencyBonus}</p>\r\n                <div>\r\n                    <h5>Skills:</h5>\r\n                    <div className=\"formHorPart\">\r\n                        {chara.proficientSkills.map(skill =>\r\n                            <p key={skill}>{skill}</p>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"formVerPart\">\r\n                <h5>Proficiencies:</h5>\r\n                {chara.otherProficiencies.map(prof => \r\n                    <p key={prof.name}>\r\n                        <b>{prof.name}</b>: {prof.description}\r\n                    </p>\r\n                    )}\r\n\r\n                <h5>Languages:</h5>\r\n                <p>\r\n                    {chara.languages.map(lan =>\r\n                        <span key={lan}>{lan} </span>\r\n                    )}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"formHorPart\">\r\n                <p>Copper: {chara.coins.copper}</p>\r\n                <p>Silver: {chara.coins.silver}</p>\r\n                <p>Electrum: {chara.coins.electrum}</p>\r\n                <p>Gold: {chara.coins.gold}</p>\r\n                <p>Platinum: {chara.coins.platinum}</p>\r\n            </div>\r\n\r\n            <div className=\"formVerPart\">\r\n                <h5>Equipment:</h5>\r\n                {chara.equipment.map(e =>\r\n                    <p key={e.id} className=\"card\">\r\n                        <h5>{e.name}</h5>\r\n                        <p>{e.description}</p>\r\n                    </p>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"formVerPart\">\r\n                <h5>Weapons:</h5>\r\n                {chara.weapons.map(w =>\r\n                    <div key={w.id} className=\"card\">\r\n                        <h5>{w.name}</h5>\r\n                        <p><b>ATK Bonus:</b> {w.atkBonus}</p>\r\n                        <p><b>Damage / Type:</b> {w.damage}</p>\r\n                        <p><b>Description:</b> {w.description}</p>\r\n                    </div>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"formVerPart\">\r\n                <h5>Spells:</h5>\r\n                {chara.spells.map(s => \r\n                    <div key={s.id} className=\"card\">\r\n                        <h5>{s.name}</h5>\r\n                        <p><b>Level:</b> {s.level}</p>\r\n                        <p><b>Description:</b> {s.description}</p>\r\n                    </div>\r\n                    )}\r\n                <p><b>Spellcasting ability:</b> {chara.spellCastingAbility}</p>\r\n            </div>\r\n            \r\n            <div className=\"formVerPart\">\r\n                <h5>Features:</h5>\r\n                {chara.features.map(f =>\r\n                    <div key={f.name}>\r\n                        <h5>{f.name}</h5>\r\n                        <p>{f.description}</p>\r\n                    </div>\r\n                    )}\r\n            </div>\r\n            \r\n            <div className=\"card\">\r\n                <h5>Notes:</h5>\r\n                <ul>\r\n                    {chara.notes.map(n =>\r\n                        <li>{n}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n            <button onClick={handleClick}>Edit character</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterPage","import React, { useState } from \"react\"\r\n\r\nimport createService from '../services/creations'\r\n\r\nimport { CheckboxField, NewFormField } from './formComponents'\r\n\r\nexport const EquipmentCreationForm = ({ userId, token, equipList, setEquipList }) => {\r\n    const [equipNameValue, equipNameSet] = useState(\"\")\r\n    const [equipDescriptionValue, equipDescriptionSet] = useState(\"\")\r\n    const [creations, setCreations] = useState([])\r\n\r\n    const createEquip = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const newEquip = {\r\n            \"name\": equipNameValue,\r\n            \"description\": equipDescriptionValue,\r\n            \"itemType\": \"Equipment\",\r\n            \"userId\": userId\r\n        }\r\n        const created = await createService.createItem(newEquip, token)\r\n\r\n        setCreations([...creations, created])\r\n        setEquipList([...equipList ,created])\r\n        \r\n        // Empty form.\r\n        equipNameSet(\"\")\r\n        equipDescriptionSet(\"\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={createEquip}>\r\n                <h4>Create new Equipment</h4>\r\n                <NewFormField label=\"Name\" type=\"text\" value={equipNameValue} setFunction={equipNameSet} required/>\r\n                <NewFormField label=\"Description\" type=\"text\" value={equipDescriptionValue} setFunction={equipDescriptionSet} required/>\r\n                <button type=\"Submit\">Create</button>\r\n            </form>\r\n\r\n            <p><b>Created equipment:</b></p>\r\n            {creations.map(e => \r\n                <p key={e.id}>\r\n                    <i>{e.name}</i>: {e.description}\r\n                </p>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const SpellCreationForm = ({ userId, token, spellsList, setSpellsList }) => {\r\n    const [spellNameValue, spellNameSet] = useState(\"\")\r\n    const [spellDescriptionValue, spellDescriptionSet] = useState(\"\")\r\n    const [spellLevel, levelSet] = useState(\"\")\r\n    const [castingTime, castingTimeSet] = useState(\"\")\r\n    const [spellRangeValue, spellRangeSet] = useState(\"\")\r\n    const [verbal, verbalSet] = useState(\"0\")\r\n    const [somatic, somaticSet] = useState(\"0\")\r\n    const [material, materialSet] = useState(\"0\")\r\n    let components = []\r\n    const [minutesValue, minutesSet] = useState(\"\")\r\n    const [isConcentrationValue, concentrationSet] = useState(\"0\")\r\n    const [creations, setCreations] = useState([])\r\n\r\n    const createSpell = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (verbal !== \"0\") components.push(\"Verbal\")\r\n        if (somatic !== \"0\") components.push(\"Somatic\")\r\n        if (material !== \"0\") components.push(\"Material\")\r\n\r\n        const newSpell = {\r\n            \"name\": spellNameValue,\r\n            \"description\": spellDescriptionValue,\r\n            \"level\": spellLevel,\r\n            \"castingTime\": castingTime,\r\n            \"range\": spellRangeValue,\r\n            \"components\": components,\r\n            \"duration\": {\r\n                \"minutes\": minutesValue,\r\n                \"isConcentration\": (isConcentrationValue !== \"\" ? true : false)\r\n            },\r\n            \"itemType\": \"Spell\",\r\n            \"userId\": userId\r\n        }\r\n        const created = await createService.createItem(newSpell, token)\r\n\r\n        setCreations([...creations, created])\r\n        setSpellsList([...spellsList, created])\r\n\r\n        // Empty form.\r\n        spellNameSet(\"\")\r\n        spellDescriptionSet(\"\")\r\n        levelSet(\"\")\r\n        castingTimeSet(\"\")\r\n        spellRangeSet(\"\")\r\n        components = []\r\n        verbalSet(\"0\")\r\n        somaticSet(\"0\")\r\n        materialSet(\"0\")\r\n        minutesSet(\"\")\r\n        concentrationSet(\"0\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={createSpell}>\r\n                <h4>Create new Spell</h4>\r\n                <NewFormField label=\"Name\" type=\"text\" value={spellNameValue} setFunction={spellNameSet} required/>\r\n                <NewFormField label=\"Description\" type=\"text\" value={spellDescriptionValue} setFunction={spellDescriptionSet} required/>\r\n                <NewFormField label=\"Level\" type=\"number\" value={spellLevel} setFunction={levelSet} min=\"0\" required/>\r\n                <NewFormField label=\"Casting Time\" type=\"text\" value={castingTime} setFunction={castingTimeSet} required/>\r\n                <NewFormField label=\"Spell Range\" type=\"number\" value={spellRangeValue} setFunction={spellRangeSet} min=\"0\" required/>\r\n                \r\n                <div>\r\n                    <h5>Needed components</h5>\r\n                    <CheckboxField title=\"Verbal\" label=\"Verbal\" value={verbal} setFunction={verbalSet} />\r\n                    <CheckboxField title=\"Somatic\" label=\"Somatic\" value={somatic} setFunction={somaticSet} />\r\n                    <CheckboxField title=\"Material\" label=\"Material\" value={material} setFunction={materialSet} />\r\n                </div>\r\n                \r\n                <NewFormField label=\"Duration, minutes\" type=\"number\" value={minutesValue} setFunction={minutesSet} min=\"0\" required/>\r\n                <CheckboxField title=\"concentration\" label=\"Is Concentration\" value={isConcentrationValue} setFunction={concentrationSet} required/>\r\n                \r\n                <button type=\"Submit\">Create</button>\r\n            </form>\r\n\r\n            <p><b>Created spells:</b></p>\r\n            {creations.map(s => \r\n                <p key={s.id}>\r\n                    <i>{s.name}</i>: {s.description}\r\n                </p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const WeaponCreationForm = ({ userId, token, weaponsList, setWeaponsList }) => {\r\n    const [weaponNameValue, weaponNameSet] = useState(\"\")\r\n    const [weaponDescriptionValue, weaponDescriptionSet] = useState(\"\")\r\n    const [atkValue, atkSet] = useState(\"\")\r\n    const [damageValue, damageSet] = useState(\"\")\r\n    const [weaponRangeValue, weaponRangeSet] = useState(\"\")\r\n    const [creations, setCreations] = useState([])\r\n\r\n    const createWeapon = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const newWeapon = {\r\n            \"name\": weaponNameValue,\r\n            \"description\": weaponDescriptionValue,\r\n            \"atkBonus\": atkValue,\r\n            \"damage\": damageValue,\r\n            \"range\": weaponRangeValue,\r\n            \"itemType\": \"Weapon\",\r\n            \"userId\": userId\r\n        }\r\n        const created = await createService.createItem(newWeapon, token)\r\n\r\n        setCreations([...creations, created])\r\n        setWeaponsList([...weaponsList, created])\r\n\r\n        // Empty form.\r\n        weaponNameSet(\"\")\r\n        weaponDescriptionSet(\"\")\r\n        atkSet(\"\")\r\n        damageSet(\"\")\r\n        weaponRangeSet(\"\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={createWeapon}>\r\n                <h4>Create new Weapon</h4>\r\n                <NewFormField label=\"Name\" type=\"text\" value={weaponNameValue} setFunction={weaponNameSet} required/>\r\n                <NewFormField label=\"Description\" type=\"text\" value={weaponDescriptionValue} setFunction={weaponDescriptionSet} required/>\r\n                <NewFormField label=\"Attack Bonus\" type=\"number\" value={atkValue} setFunction={atkSet} min=\"0\" required/>\r\n                <NewFormField label=\"Damage and Type\" type=\"text\" value={damageValue} setFunction={damageSet} required/>\r\n                <NewFormField label=\"Attack Range\" type=\"number\" value={weaponRangeValue} setFunction={weaponRangeSet} min=\"0\" required/>\r\n                <button type=\"Submit\">Create</button>\r\n            </form>\r\n\r\n            <p><b>Created weapons:</b></p>\r\n            {creations.map(w => \r\n                <p key={w.id}>\r\n                    <i>{w.name}</i>: {w.description}\r\n                </p>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport createService from '../services/creations'\r\nimport { NewFormField, AddToSimpleList, AddItemToList, CheckboxField, DropDownList } from \"./formComponents\"\r\nimport { EquipmentCreationForm, SpellCreationForm, WeaponCreationForm } from \"./itemCreationForm\"\r\n\r\nconst CharacterForm = ({ token, userId, handleSubmitToBackend, userCreations }) => {\r\n    const { characterId } = useParams()\r\n    const [isNewCharacter, setIsNew] = useState(true)\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [race, setRace] = useState(\"\")\r\n    const [charClass, setClass] = useState(\"\")\r\n    const [level, setLevel] = useState(\"\")\r\n    const [exp, setExp] = useState(\"\")\r\n    const [background, setBackground] = useState(\"\")\r\n    const [personality, setPersonality] = useState(\"\")\r\n    const [alignment, setAlignment] = useState(\"\")\r\n    const [health, setHealth] = useState(\"\")\r\n    const [hitDice, setHitDice] = useState(\"\")\r\n    const [armorClass, setArmorClass] = useState(\"\")\r\n    const [initiative, setInitiative] = useState(\"\")\r\n    const [speed, setSpeed] = useState(\"\")\r\n    const [strength, setStrength] = useState(\"\")\r\n    const [dex, setDex] = useState(\"\")\r\n    const [constitution, setConstitution] = useState(\"\")\r\n    const [int, setInt] = useState(\"\")\r\n    const [wis, setWis] = useState(\"\")\r\n    const [cha, setCha] = useState(\"\")\r\n    const [pWis, setPWis] = useState(\"\")\r\n    const [bonus, setBonus] = useState(\"\")\r\n\r\n    const [acrobatics, setAcrobatics] = useState(\"0\")\r\n    const [animalHandling, setAnimalHandling] = useState(\"0\")\r\n    const [arcana, setArcana] = useState(\"0\")\r\n    const [athletics, setAthletics] = useState(\"0\")\r\n    const [deception, setDeception] = useState(\"0\")\r\n    const [history, setHistory] = useState(\"0\")\r\n    const [insight, setInsight] = useState(\"0\")\r\n    const [intimidation, setIntimidation] = useState(\"0\")\r\n    const [investigation, setInvestigation] = useState(\"0\")\r\n    const [medicine, setMedicine] = useState(\"0\")\r\n    const [nature, setNature] = useState(\"0\")\r\n    const [perception, setPerception] = useState(\"0\")\r\n    const [performance, setPerformance] = useState(\"0\")\r\n    const [persuasion, setPersuasion] = useState(\"0\")\r\n    const [religion, setReligion] = useState(\"0\")\r\n    const [sleightOfHand, setSleightOfHand] = useState(\"0\")\r\n    const [stealth, setStealth] = useState(\"0\")\r\n    const [survival, setSurvival] = useState(\"0\")\r\n\r\n    const [lan, setLan] = useState([])\r\n    const [otherProficiencies, setOtherProficiencies] = useState([])\r\n    const [features, setFeatures] = useState([])\r\n    \r\n    const [weapons, setWeapons] = useState([])\r\n    const [spellCasting, setSpellCasting] = useState(\"\")\r\n    const [spells, setSpells] = useState([])\r\n    const [equip, setEquip] = useState([])\r\n    const [storage, setStorage] = useState([])\r\n\r\n    const [copper, setCopper] = useState(0)\r\n    const [silver, setSilver] = useState(0)\r\n    const [gold, setGold] = useState(0)\r\n    const [platinum, setPlatinum] = useState(0)\r\n    const [electrum, setElectrum] = useState(0)\r\n\r\n    const [notes, setNotes] = useState([])\r\n\r\n    const [gotEquipment, setGotEquipment] = useState([])\r\n    const [gotSpells, setGotSpells] = useState([])\r\n    const [gotWeapons, setGotWeapons] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        getCharacter()\r\n        getItems()\r\n    }, [])\r\n\r\n    const getCharacter = async () => {\r\n        let chara = \"\"\r\n        if (characterId === \"new\"){\r\n            return\r\n        }\r\n        try {\r\n            chara = await createService.getCharacter(characterId, token)\r\n        } catch{\r\n            // If no character found, return from this function.\r\n            return\r\n        }\r\n        setIsNew(false)\r\n\r\n        setName(chara.name)\r\n        setRace(chara.race)\r\n        setClass(chara.class)\r\n        setLevel(chara.level)\r\n        setExp(chara.experiencePoints)\r\n        setBackground(chara.background)\r\n        setPersonality(chara.personalityTraits)\r\n        setAlignment(chara.alignment)\r\n        setHealth(chara.maxHealth)\r\n        setHitDice(chara.hitDice)\r\n        setArmorClass(chara.armorClass)\r\n        setInitiative(chara.initiative)\r\n        setSpeed(chara.speed)\r\n        setStrength(chara.strength)\r\n        setDex(chara.dexterity)\r\n        setConstitution(chara.constitution)\r\n        setInt(chara.intelligence)\r\n        setWis(chara.wisdom)\r\n        setCha(chara.charisma)\r\n        setPWis(chara.passiveWisdom)\r\n        setBonus(chara.proficiencyBonus)\r\n        // Set proficiencient skills.\r\n        const proficientSkills = chara.proficientSkills\r\n        proficientSkills.forEach(skill => {\r\n            switch(skill) {\r\n                case 'Acrobatics':\r\n                    setAcrobatics(\"Acrobatics\")\r\n                    break\r\n                case 'Animal Handling':\r\n                    setAnimalHandling(\"Animal Handling\")\r\n                    break\r\n                case 'Arcana':\r\n                    setArcana(\"Arcana\")\r\n                    break\r\n                case 'Athletics':\r\n                    setAthletics(\"Athletics\")\r\n                    break    \r\n                case 'Deception':\r\n                    setDeception(\"Deception\")\r\n                    break\r\n                case 'History':\r\n                    setHistory(\"History\")\r\n                    break\r\n                case 'Insight':\r\n                    setInsight(\"Insight\")\r\n                    break\r\n                case 'Intimidation':\r\n                    setIntimidation(\"Intimidation\")\r\n                    break\r\n                case 'Investigation':\r\n                    setInvestigation(\"Investigation\")\r\n                    break\r\n                case 'Medicine':\r\n                    setMedicine(\"Medicine\")\r\n                    break\r\n                case 'Nature':\r\n                    setNature(\"Nature\")\r\n                    break\r\n                case 'Perception':\r\n                    setPerception(\"Perception\")\r\n                    break\r\n                case 'Performance':\r\n                    setPerformance(\"Performance\")\r\n                    break\r\n                case 'Persuasion':\r\n                    setPersuasion(\"Persuasion\")\r\n                    break\r\n                case 'Religion':\r\n                    setReligion(\"Religion\")\r\n                    break\r\n                case 'Sleight of Hand':\r\n                    setSleightOfHand(\"Sleight of Hand\")\r\n                    break\r\n                case 'Stealth':\r\n                    setStealth(\"Stealth\")\r\n                    break\r\n                case 'Survival':\r\n                    setSurvival(\"Survival\")\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        });\r\n\r\n        setLan(chara.languages)\r\n        setOtherProficiencies(chara.otherProficiencies)\r\n        setFeatures(chara.features)\r\n        setWeapons(chara.weapons)\r\n        setSpellCasting(chara.spellCastingAbility)\r\n        setSpells(chara.spells)\r\n        setEquip(chara.equipment)\r\n        setStorage(chara.storage)\r\n\r\n        setCopper(chara.coins.copper)\r\n        setSilver(chara.coins.silver)\r\n        setGold(chara.coins.gold)\r\n        setPlatinum(chara.coins.platinum)\r\n        setElectrum(chara.coins.electrum)\r\n\r\n        setNotes(chara.notes)\r\n    }\r\n\r\n    const getItems = async () => {\r\n        // Get public equipment.\r\n        const e = await createService.getEquipment()\r\n        // Add user's created equipment.\r\n        const allEquipment = e.concat(userCreations.equipment)\r\n        setGotEquipment(allEquipment)\r\n\r\n        const s = await createService.getSpells()\r\n        const allSpells = s.concat(userCreations.spells)\r\n        setGotSpells(allSpells)\r\n\r\n        const w = await createService.getWeapons()\r\n        const allWeapons = w.concat(userCreations.weapons)\r\n        setGotWeapons(allWeapons)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        // Get Proficiencies from checkboxes.\r\n        let listOfProficiencies = [acrobatics, animalHandling, arcana, athletics, deception, history, insight, intimidation, investigation,\r\n            medicine, nature, perception, performance, persuasion, religion, sleightOfHand, stealth, survival]\r\n            \r\n        listOfProficiencies = listOfProficiencies.filter(p => p !== '0')\r\n\r\n        const newCharacter = {\r\n            userId: userId,\r\n            characterId: characterId,\r\n            name: name,\r\n            race: race,\r\n            class: charClass,\r\n            level: level,\r\n            experiencePoints: exp,\r\n            background: background,\r\n            personalityTraits: personality,\r\n            alignment: alignment,\r\n            maxHealth: health,\r\n            hitDice: hitDice,\r\n            armorClass: armorClass,\r\n            initiative: initiative,\r\n            speed: speed,\r\n            strength: strength,\r\n            dexterity: dex,\r\n            constitution: constitution,\r\n            intelligence: int,\r\n            wisdom: wis,\r\n            charisma: cha,\r\n            passiveWisdom: pWis,\r\n            proficiencyBonus: bonus,\r\n            proficientSkills: listOfProficiencies,\r\n            languages: lan,\r\n            otherProficiencies: otherProficiencies,\r\n            // Save only weapon ids.\r\n            weapons: weapons.map(w => w.id),\r\n            spellCastingAbility: spellCasting,\r\n            // Save only spell ids.\r\n            spells: spells.map(s => s.id),\r\n            // Save only equipment ids.\r\n            equipment: equip.map(e => e.id),\r\n            storage: storage.map(s => s.id),\r\n            features: features,\r\n            coins: {\r\n                copper: copper,\r\n                silver: silver,\r\n                gold: gold,\r\n                platinum: platinum,\r\n                electrum: electrum\r\n            },\r\n            notes: notes\r\n        }\r\n\r\n        // Send new character to backend or update existing one.\r\n        handleSubmitToBackend(newCharacter, isNewCharacter)\r\n\r\n        //Move to profile page.\r\n        navigate(\"/myProfile\")\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            { isNewCharacter ? <h2>Create New Character</h2>\r\n                : <h2>Edit Character <i>{name}</i></h2>\r\n            }\r\n\r\n            <form onSubmit={handleSubmit} className=\"formContainer\">\r\n                <div className=\"formHorPart\">\r\n                    <NewFormField type=\"text\" label=\"Name\" value={name} setFunction={setName} required/>\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <NewFormField type=\"text\" label=\"Race\" value={race} setFunction={setRace}/>\r\n                    <NewFormField type=\"text\" label=\"Class\" value={charClass} setFunction={setClass}/>\r\n                    <NewFormField type=\"number\" label=\"Level\" value={level} setFunction={setLevel} min=\"0\" max=\"100\" />\r\n                    <NewFormField type=\"number\" label=\"Experience Points\" value={exp} setFunction={setExp} min=\"0\" required/>\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <NewFormField type=\"text\" label=\"Background\" value={background} setFunction={setBackground}/>\r\n                    <NewFormField type=\"text\" label=\"Personality\" value={personality} setFunction={setPersonality}/>\r\n                    <NewFormField type=\"text\" label=\"Alignment\" value={alignment} setFunction={setAlignment} />\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <NewFormField type=\"number\" label=\"Hit Points\" value={health} setFunction={setHealth} min=\"0\" />\r\n                    <NewFormField type=\"text\" label=\"Hit Dice\" value={hitDice} setFunction={setHitDice} />\r\n                    <NewFormField type=\"number\" label=\"Armor Class\" value={armorClass} setFunction={setArmorClass} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Initiative\" value={initiative} setFunction={setInitiative} min=\"-20\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Speed\" value={speed} setFunction={setSpeed} min=\"0\" />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <NewFormField type=\"number\" label=\"Strength\" value={strength} setFunction={setStrength} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Dexterity\" value={dex} setFunction={setDex} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Constitution\" value={constitution} setFunction={setConstitution} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Intelligence\" value={int} setFunction={setInt} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Wisdom\" value={wis} setFunction={setWis} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Charisma\" value={cha} setFunction={setCha} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Passive Wisdom\" value={pWis} setFunction={setPWis} min=\"0\" max=\"20\" />\r\n                    <NewFormField type=\"number\" label=\"Proficiency Bonus\" value={bonus} setFunction={setBonus} min=\"0\" max=\"20\" />\r\n                </div>\r\n                \r\n                <div className=\"formVerPart\">\r\n                    <h4>Proficiencies</h4>\r\n                    <CheckboxField title='Acrobatics' label=\"Acrobatics\" value={acrobatics} setFunction={setAcrobatics}/>\r\n                    <CheckboxField title='AnimalHandling' label=\"Animal Handling\" value={animalHandling} setFunction={setAnimalHandling}/>\r\n                    <CheckboxField title='Arcana' label=\"Arcana\" value={arcana} setFunction={setArcana}/>\r\n                    <CheckboxField title='Athletics' label=\"Athletics\" value={athletics} setFunction={setAthletics}/>\r\n                    <CheckboxField title='Deception' label=\"Deception\" value={deception} setFunction={setDeception}/>\r\n                    <CheckboxField title='History' label=\"History\" value={history} setFunction={setHistory}/>\r\n                    <CheckboxField title='Insight' label=\"Insight\" value={insight} setFunction={setInsight}/>\r\n                    <CheckboxField title='Intimidation' label=\"Intimidation\" value={intimidation} setFunction={setIntimidation}/>\r\n                    <CheckboxField title='Investigation' label=\"Investigation\" value={investigation} setFunction={setInvestigation}/>\r\n                    <CheckboxField title='Medicine' label=\"Medicine\" value={medicine} setFunction={setMedicine}/>\r\n                    <CheckboxField title='Nature' label=\"Nature\" value={nature} setFunction={setNature}/>\r\n                    <CheckboxField title='Perception' label=\"Perception\" value={perception} setFunction={setPerception}/>\r\n                    <CheckboxField title='Performance' label=\"Performance\" value={performance} setFunction={setPerformance}/>\r\n                    <CheckboxField title='Persuasion' label=\"Persuasion\" value={persuasion} setFunction={setPersuasion}/>\r\n                    <CheckboxField title='Religion' label=\"Religion\" value={religion} setFunction={setReligion}/>\r\n                    <CheckboxField title='SleightOfHand' label=\"Sleight of Hand\" value={sleightOfHand} setFunction={setSleightOfHand}/>\r\n                    <CheckboxField title=\"Stealth\" label=\"Stealth\" value={stealth} setFunction={setStealth} />\r\n                    <CheckboxField title=\"Survival\" label=\"Survival\" value={survival} setFunction={setSurvival} />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <AddToSimpleList listHeader=\"Languages\" label=\"New Language\" listValue={lan} listSetFunction={setLan} />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <AddItemToList listHeader=\"Other Proficiencies\" listValue={otherProficiencies} listSetFunction={setOtherProficiencies} />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <NewFormField type=\"text\" label=\"Spell Casting Ability\" value={spellCasting} setFunction={setSpellCasting} />\r\n                    <DropDownList field=\"Spells\" optionsList={gotSpells} listValue={spells} listSetFunction={setSpells} />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <DropDownList field=\"Equipment\" optionsList={gotEquipment} listValue={equip} listSetFunction={setEquip} />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <DropDownList field=\"Weapons\" optionsList={gotWeapons} listValue={weapons} listSetFunction={setWeapons} />\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <AddItemToList listHeader=\"Features\" listValue={features} listSetFunction={setFeatures} />\r\n                </div>\r\n                \r\n                <div className=\"formVerPart\">\r\n                    <h4>Coins</h4>\r\n                    <NewFormField type=\"Number\" label=\"Copper\" value={copper} setFunction={setCopper} min=\"0\"/>\r\n                    <NewFormField type=\"Number\" label=\"Silver\" value={silver} setFunction={setSilver} min=\"0\"/>\r\n                    <NewFormField type=\"Number\" label=\"Gold\" value={gold} setFunction={setGold} min=\"0\"/>\r\n                    <NewFormField type=\"Number\" label=\"Platinum\" value={platinum} setFunction={setPlatinum} min=\"0\"/>\r\n                    <NewFormField type=\"Number\" label=\"Electrum\" value={electrum} setFunction={setElectrum} min=\"0\"/>\r\n                </div>\r\n                <div className=\"formVerPart\">\r\n                    <AddToSimpleList listHeader=\"Notes\" label=\"New Note\" listValue={notes} listSetFunction={setNotes} />\r\n                </div>\r\n                \r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n\r\n            <div className=\"formContainer\">\r\n                <div className=\"formHorPart\">\r\n                    <EquipmentCreationForm userId={userId} token={token} equipList={gotEquipment} setEquipList={setGotEquipment} />\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <SpellCreationForm userId={userId} token={token} spellsList={gotSpells} setSpellsList={setGotSpells} />\r\n                </div>\r\n                <div className=\"formHorPart\">\r\n                    <WeaponCreationForm userId={userId} token={token} weaponsList={gotWeapons} setWeaponsList={setGotWeapons}/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterForm","import React, { useState } from \"react\"\r\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\"\r\n\r\nimport userService from './services/users'\r\nimport CreationsService from './services/creations'\r\n\r\nimport LoginForm from './components/loginForm'\r\nimport CreateUserForm from \"./components/signupForm\"\r\nimport ProfilePage from \"./components/myProfilePage\"\r\nimport UserPage from './components/userPage'\r\nimport AllUsers from \"./components/users\"\r\nimport CharacterPage from \"./components/characterPage\"\r\nimport CharacterForm from \"./components/characterForm\"\r\nimport PartyCreationForm  from './components/partyForm'\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(\"\")\r\n  const [user, setUser] = useState(\"\")\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const loginFunc = async (user, token) => {\r\n    setToken(token)\r\n\r\n    if(user !== ''){\r\n      const profile = await userService.getUser(user, token)\r\n      setUser(profile)\r\n\r\n    } else{\r\n      setUser('')\r\n    }\r\n  }\r\n\r\n  if (user === ''){\r\n    return(\r\n      <div>\r\n        <h1 className=\"frontPage\">TTRPG Parties</h1>\r\n\r\n        <div className=\"formHorPart\">\r\n          <LoginForm setFunction={loginFunc} user={user}/>\r\n          <CreateUserForm />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleCharacterSubmit = (newCharacter, isNew) => {\r\n    if (isNew){\r\n      CreationsService.createCharacter(newCharacter, token)\r\n    } else {\r\n      CreationsService.updateCharacter(newCharacter, token)\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <h1 className=\"siteName\">TTRPG Parties</h1>\r\n        <LoginForm setFunction={loginFunc} user={user.id} loggedInAs={user.username}/>\r\n\r\n        <Routes>\r\n          \r\n          <Route path=\"/myProfile\" element={ <ProfilePage user={user} token={token} /> } />\r\n          <Route path=\"/user/:id\" element={ <UserPage user={user} token={token} /> } />\r\n          <Route path=\"/user/all\" element={ <AllUsers /> } />\r\n          <Route path=\"/character/view/:characterId\" element={ <CharacterPage token={token} /> } /> \r\n          <Route path=\"/character/:characterId\" element={ <CharacterForm token={token} userId={user.id} handleSubmitToBackend={ handleCharacterSubmit } userCreations={user.creations} /> } />\r\n          <Route path=\"/party/:partyId\" element={ <PartyCreationForm token={token} userId={user.id} user={user} /> } />\r\n        </Routes>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}